USER_NOT_EXIST=用户不存在
LOGIN_FAILED=用户名或密码错误
TOKEN_VERIFY_FAILED=登录失效，请重新登录
# FlinkTaskDiagnosisController
OPTIMIZE_MEMORY=任务可优化总内存数
OPTIMIZE_CORE=任务可优化总核数
TASK_PARALLEL=任务并行度
TASK_TM_MEM=任务tm内存
TASK_TOTAL_MEMORY=任务总内存数
TASK_SLOT_AMOUNT=任务slot数量
TASK_JM_MEMORY=任务jm内存数
TASK_TOTAL_CORE=任务总core数
TASK_ADVICE_CORE=任务建议总core数
TASK_ADVICE_PARALLEL=任务建议并行度
TASK_ADVICE_TM_MEM=任务建议tm内存
TASK_ADVICE_TOTAL_MEMORY=任务建议总内存数
TASK_ADVICE_JM_MEMORY=任务建议jm内存
DESC=倒序
ASC=正序
PARALLEL=并行度
TM_SLOT_AMOUNT=TM的slot数量
TM_CORE_AMOUNT=TM的core数量
TM_MEM=tm内存MB
JM_MEM=jm内存MB
TM_NUM=tm数量
DIAGNOSIS_START_TIME=诊断起始时间
DIAGNOSIS_END_TIME=诊断结束时间
DIAGNOSIS_PARALLEL=建议并行度
DIAGNOSIS_JM_MEM_SIZE=建议jm内存MB
DIAGNOSIS_TM_SLOT_NUM=建议TM的slot数量
DIAGNOSIS_TM_CORE_NUM=建议tm的core数量
DIAGNOSIS_TM_NUM=建议tm数量
METRIC_JOB_NAME=上报metric的job名字
FLINK_TRACK_URL=Flink track url
APPLICATION_ID=Application ID
NO_DATA_PERIOD=该周期内无数据
# RunError
LOG_TYPE=日志类型
EVENT=事件描述
LOG_TIME=时间
LOG_CONTENT=关键日志
ADVICE=诊断建议
# BigTableScan
HIVE_TABLE=扫描的hive表名称
COLUMNS=扫描行数
THRESHOLD=阈值
# GlobalSort
TASK_NUM=任务个数
DATA_OF_COLUMN=处理数据量(行)
DURATION=执行耗时
# OOMWarn
BROADCAST_HIVE_TABLE=广播表名称
OUTPUT_OF_COLUMNS=过滤后输出行数
MEMORY_USED=占用内存大小
# FlinkTaskAnalysisInfo
JOB_PARALLEL=作业并行度
JOB_SLOT_AMOUNT=作业TM的Slot数
JOB_TM_CORE_AMOUNT=作业TM的Core数
JOB_TM_MEMORY=作业TM的内存
JOB_JM_MEMORY=作业JM的内存
# JobInfo
BROADCAST_USED_MEMORY=广播使用内存
RATIO_MEMORY=占比内存
BASELINE_DURATION=正常耗时区间
BASELINE_END_TIME=正常结束区间
LAST_SUCCESSFUL_TIME=最近一次成功的时间
SINCE_NOW=距今
DAY=天
# CpuWasteService
CPU_WASTE_CONCLUSION_DESC=计算规则：<br/>&nbsp;  \
  app消耗的计算资源 = 最大并发vCore * app运行时间<br/> &nbsp;  \
  job消耗的计算资源 = 最大并发vCore * job运行时间 <br/> &nbsp;  \
  task消耗的计算资源 = task计算时间累计<br/> &nbsp;  \
  driver资源浪费 = app消耗的计算资源 - job消耗的计算资源 <br/> &nbsp;  \
  executor资源浪费 = job消耗的计算资源 - task消耗的计算资源<br/>&nbsp;  \
  当executor资源浪费占比超过阈值%s或者driver资源浪费占比超过阈值%s,即判断为发生CPU资源浪费
CPU_WASTE_ANALYSIS=CPU浪费分析
CPU_WASTE=浪费
CPU_EFFICIENT=有效

# MemoryWasteService
MEMORY_WASTE_CONCLUSION_DESC=内存浪费计算规则:<br/> &nbsp;  \
  总内存时间 = executor配置内存大小 * executor数量 * app运行时间 <br/> &nbsp;  \
  执行消耗内存时间 = sum(executor峰值内存 * executor执行时间) <br/>&nbsp;  \
  浪费内存的百分比 = (总内存时间-执行消耗内存时间)/总内存时间 <br/>&nbsp;  \
  当内存浪费占比超过%s, 即判断发生内存浪费
MEMORY_WASTE_ANALYSIS=内存浪费分析
MEMORY_WASTE_CHART_DESC=每个executor的峰值内存和最大内存分布图
MEMORY_WASTE_CHART_Y=内存
MEMORY_WASTE_CHART_FREE=空闲内存
MEMORY_WASTE_CHART_PEAK=峰值内存

# MRMemoryWasteService
MR_MEMORY_WASTE_CONCLUSION_DESC=内存浪费计算规则:<br/> &nbsp;  \
  总内存时间 = sum(map/reduce配置内存大小 * map/reduce运行时间) <br/> &nbsp;  \
  执行消耗内存时间 = sum(map/reduce峰值内存 * map/reduce执行时间) <br/>&nbsp;  \
  浪费内存的百分比 = (总内存时间-执行消耗内存时间)/总内存时间 <br/>&nbsp;  \
  当map内存浪费占比超过%s或reduce内存浪费占比超过%s, 即判断发生内存浪费
MR_MEMORY_WASTE_CONCLUSION_INFO=%s分配内存<span style=\"color: #e24a4a;\">%s</span>, \
  峰值内存<span style=\"color: #e24a4a;\">%s</span>,内存浪费为<span style=\"color: #e24a4a;\">%s</span>
MR_MEMORY_WASTE_ANALYSIS=MR内存浪费分析
MR_MEMORY_WASTE_CHART_DESC=%s任务的峰值内存和最大内存分布图

# MemoryOverflowService
MEMORY_OVERFLOW_ANALYSIS=内存溢出分析
MEMORY_OVERFLOW_CONCLUSION=运行过程发生内存溢出,请根据关键日志和相应的诊断建议进行问题修复
MEMORY_OVERFLOW_CONCLUSION_DESC=抓取Driver/Executor中内存溢出的相关日志

# OtherExceptionService
OTHER_EXCEPTION_ANALYSIS=错误日志分析
OTHER_EXCEPTION_CONCLUSION=运行过程发生错误异常,请根据关键日志和相应的诊断建议进行问题修改
OTHER_EXCEPTION_CONCLUSION_DESC=抓取Driver/Executor中的错误日志

# RunErrorBaseService
RUN_ERROR_CONCLUSION=未检测到异常

# ShuffleFailedService
SHUFFLE_FAILED_ANALYSIS=shuffle失败分析
SHUFFLE_FAILED_CONCLUSION=shuffle过程发生错误，请根据关键日志和对应的诊断建议进行问题修改
SHUFFLE_FAILED_CONCLUSION_DESC=抓取Driver/Executor中shuffle错误的相关日志

# SqlFailedService
SQL_FAILED_ANALYSIS=sql失败分析
SQL_FAILED_CONCLUSION=发生语法解析错误，请根据关键日志和对应的诊断建议进行问题修改
SQL_FAILED_CONCLUSION_DESC=抓取Driver/Executor中语法解析错误的相关日志

# RunInfoService
RUN_INFO_CATEGORY_NORMAL=正常

# BigTableScanService
BIG_TABLE_SCAN_ANALYSIS=大表扫描分析
BIG_TABLE_SCAN_CONCLUSION_DESC=扫描表的行数超过%s行的任务

# DataSkewService
DATA_SKEW_ANALYSIS=数据倾斜分析
DATA_SKEW_CONCLUSION_DESC=数据倾斜诊断规则如下: <br/> &nbsp;  \
  1、任务总耗时>30min<br/> &nbsp;  \
  2、stage耗时/任务总耗时>45%%<br/> &nbsp;  \
  3、shuffle read的数据量满足一下条件之一：<br> &nbsp;&nbsp;    \
  a、当5万<中位值<=10万，且最大值/中位值>=100 <br> &nbsp;&nbsp;    \
  b、当10万<中位值<100万,且最大值/中位值>=50<br/> &nbsp;&nbsp;    \
  c、当100万<中位值<500万, 且最大值/中位值>=10<br/> &nbsp;&nbsp;    \
  d、当500万<中位值<2000万, 且最大值/中位值>=5<br/> &nbsp;&nbsp;    \
  e、当2000万<中位值<3000万, 且最大值/中位值>=3.5<br/> &nbsp;&nbsp;    \
  f、当3000万<中位值<4000万, 且最大值/中位值>=3<br/> &nbsp;&nbsp;    \
  g、当4000万<中位值<5000万, 且最大值/中位值>=2.25<br/> &nbsp;&nbsp;    \
  h、当5000万<中位值, 且最大值/中位值>=2<br/>
DATA_SKEW_CHART_DESC=Stage中任务Shuffle Read Records最大值与中位值比值的分布图
DATA_SKEW_CHART_MAX=最大值
DATA_SKEW_CHART_MEDIAN=中位值
DATA_SKEW_CHART_NORMAL=正常值
DATA_SKEW_CHART_STAGE_DESC=Stage[%s]Reduce任务Shuffle Read Records
DATA_SKEW_CONCLUSION_INFO=job[<span style="color: #e24a4a;">%s</span>].stage[<span style="color: #e24a4a;">%s</span>].task[<span style="color: #e24a4a;">%s</span>]shuffle read的数据量为<span style="color: #e24a4a;">%s</span> 中位值为%s
DATA_SKEW_CHART_INFO_NORMAL=数据正常Stage
DATA_SKEW_CHART_INFO_ABNORMAL=数据倾斜Stage

# GlobalSortService
GLOBAL_SORT_ANALYSIS=全局排序异常分析
GLOBAL_SORT_CONCLUSION_DESC=诊断规则：<br/>&nbsp;  \
  1、任务中有一个stage只生成%s个task<br/>&nbsp;  \
  2、处理的数据量超过%s行<br/>&nbsp;  \
  3、运行时长超过%s分钟<br/>&nbsp;  \
  以上条件都满足则判定为全局排序异常
GLOBAL_SORT_CONCLUSION_INFO=job[<span style=\"color: #e24a4a;\">%d</span>].stage[<span style=\"color: #e24a4a;\">%d</span>]\
  只有一个task[<span style=\"color: #e24a4a;\">%d</span>]任务,处理的数据量为<span style=\"color: #e24a4a;\">%s行</span>\,\
  运行时长为<span style=\"color: #e24a4a;\">%s</span>


# HdfsStuckService
HDFS_STUCK_ANALYSIS=HDFS卡顿分析
HDFS_STUCK_CONCLUSION_DESC=计算Stage中每个任务的处理速率(读取数据量与耗时的比值), 当处理速率的中位值与最小值的比大于%s,即判定为HDFS卡顿
HDFS_STUCK_CHART_DESC=每个Stage中任务处理数据速率的中位值和最小值的比值的分布图
HDFS_STUCK_CHART_MIN=最小值
HDFS_STUCK_CHART_MEDIAN=中位值
HDFS_STUCK_CHART_NORMAL=正常值
HDFS_STUCK_CHART_TASK_DESC=Job[%s] Stage[%s]每个task读取数据量与耗时比值的分布情况(%s)
HDFS_STUCK_CONCLUSION_INFO=job[<span style=\"color: #e24a4a;\">%d</span>].stage[<span style=\"color: #e24a4a;\">%d</span>].task[<span style=\"color: #e24a4a;\">%d</span>]\
  处理速率为<span style=\"color: #e24a4a;\">%.2f</span>MB/s 中位值为%.2fMB/s
HDFS_STUCK_CHART_STAGE_NORMAL=数据正常Stage
HDFS_STUCK_CHART_STAGE_ABNORMAL=数据卡顿Stage

# JobDurationService
JOB_DURATION_ABNORMAL_ANALYSIS=Job耗时异常分析
JOB_DURATION_CONCLUSION_DESC=Job中空闲时间 (job总时间 - stage累计时间) 与总时间的占比超过%s%%，即判定为Job耗时异常
JOB_DURATION_CHART_DESC=每个Job计算-空闲时间分布(%s)
JOB_DURATION_CHART_COMPUTE=Job计算时间
JOB_DURATION_CHART_IDLE=Job空闲时间

# MRBigTableScanService
MR_BIG_TABLE_SCAN_ANALYSIS=MR大表扫描分析
MR_BIG_TABLE_SCAN_CONCLUSION_DESC=扫描表的行数超过%s行的任务


# MRDataSkewService
MR_DATA_SKEW_ANALYSIS=MR数据倾斜分析
MR_DATA_SKEW_CONCLUSION_DESC=Task处理的最大数据量超过%sMB,时间超过%sms,最大值/中位值比值map超过%s或者reduce超过%s
MR_DATA_SKEW_CHART_Y=数据量
MR_DATA_SKEW_CHART_MAX=最大值
MR_DATA_SKEW_CHART_MEDIAN=中位值
MR_DATA_SKEW_CHART_NORMAL=正常值
MR_DATA_SKEW_CHART_TASK_DESC=%s任务处理数据量分布图
MR_DATA_SKEW_CONCLUSION_INFO=%s task[<span style=\"color: #e24a4a;\">%s</span>]\
  处理数据量为<span style=\"color: #e24a4a;\">%s</span>\
  运行耗时为<span style=\"color: #e24a4a;\">%s</span>, 中位值为%s

# MRGCService
MR_GC_ANALYSIS=MRGC异常分析
MR_GC_CONCLUSION_DESC=Task GC平均时间/CPU平均时间比值map超过%s或者reduce超过%s
MR_GC_CONCLUSION_INFO=%s任务GC平均时间为：<span style=\"color: #e24a4a;\">%s ms</span>, \
  CPU平均时间为：<span style=\"color: #e24a4a;\">%s ms</span>, \
  GC时间/CPU时间为<span style=\"color: #e24a4a;\">%s</span>, \
  超过阈值<span style=\"color: #e24a4a;\">%s</span>
MR_GC_CHART_DESC=%s任务的GC时间和CPU时间分布图
MR_GC_CHART_Y=耗时
MR_GC_CHART_GC_TIME=GC时间
MR_GC_CHART_CPU_TIME=CPU时间

# MRSpeculativeTaskService
MR_SPECULATIVE_ANALYSIS=MR推测执行过多分析
MR_SPECULATIVE_CONCLUSION_DESC=MapReduce中推测执行任务数超过%s个
MR_SPECULATIVE_CHART_DESC=每个推测执行任务耗时分布
MR_SPECULATIVE_DURATION=推测执行耗时

# MRTaskLongTailService
MR_LONG_TAIL_ANALYSIS=MR长尾Task分析
MR_LONG_TAIL_CONCLUSION_DESC=Task运行耗时的最大值超过%sms,最大值/中位值比值map超过%s或者reduce超过%s
MR_LONG_TAIL_CHART_DESC=%s任务运行耗时分布图
MR_LONG_TAIL_CONCLUSION_INFO=%s task[<span style="color: #e24a4a;">%s</span>]\
  运行耗时为<span style="color: #e24a4a;">%s</span> 中位值为%s
MR_LONG_TAIL_CHART_Y=任务耗时
MR_LONG_TAIL_CHART_MAX=最大值
MR_LONG_TAIL_CHART_MEDIAN=中位值
MR_LONG_TAIL_CHART_NORMAL=正常值

# OOMWarnService
OOM_WARN_ANALYSIS=OOM预警分析
OOM_WARN_CONCLUSION_DESC=广播表的累计内存与driver或executor任意一个内存占比超过40%，即判定为OOM预警

# SpeculativeTaskService
SPECULATIVE_TASK_ANALYSIS=推测执行过多分析
SPECULATIVE_TASK_CONCLUSION_DESC=Stage中推测执行任务数超过%s个，即可判定为推测执行过多
SPECULATIVE_TASK_CHART_DESC=每个Stage推测执行数量分布
SPECULATIVE_TASK_CHART_Y=推测执行数量
SPECULATIVE_TASK_CHART_NORMAL=正常stage
SPECULATIVE_TASK_CHART_ABNORMAL=异常stage

# StageDurationService
STAGE_DURATION_ANALYSIS=Stage耗时异常分析
STAGE_DURATION_CONCLUSION_DESC=Stage空闲时间 (stage运行时间-任务运行时间) 与stage运行时间的占比超过%s%%，即判定为Stage耗时异常
STAGE_DURATION_CHART_DESC=每个stage计算-空闲时间分布(%s)
STAGE_DURATION_CHART_COMPUTE=Stage计算时间
STAGE_DURATION_CHART_IDLE=Stage空闲时间

# TaskLongTailService
TASK_LONG_TAIL_ANALYSIS=长尾Task分析
TASK_LONG_TAIL_CONCLUSION_DESC=Task中任务运行耗时的最大值与中位值的比值大于%s，即判定为Task耗时异常
TASK_LONG_TAIL_CONCLUSION_INFO=job[<span style=\"color: #e24a4a;\">%d</span>].stage[<span style=\"color: #e24a4a;\">%d</span>]\
  .task[<span style=\"color: #e24a4a;\">%d</span>]运行耗时<span style=\"color: #e24a4a;\">%s</span> 中位值为%s
TASK_LONG_TAIL_CHART_STAGE_DESC=每个Stage 任务运行耗时最大值与中位值比值的分布图
TASK_LONG_TAIL_CHART_TASK_DESC=Stage[%s]每个Task耗时分布(%s)
TASK_LONG_TAIL_CHART_MAX=最大值
TASK_LONG_TAIL_CHART_MEDIAN=中位值
TASK_LONG_TAIL_CHART_NORMAL=正常值
TASK_LONG_TAIL_CHART_STAGE_NORMAL=正常Stage
TASK_LONG_TAIL_CHART_STAGE_ABNORMAL=长尾Stage

# ReportServiceImpl
CPU_USAGE_TREND=CPU消耗趋势
CPU_DIAGNOSIS_TREND=诊断任务CPU消耗数
CPU_TOTAL_TREND=CPU消耗趋势
MEMORY_USAGE_TREND=内存消耗趋势
MEMORY_DIAGNOSIS_TREND=诊断任务内存消耗数
MEMORY_TOTAL_TREND=总内存消耗数
AMOUNT_TREND=数量趋势
DIAGNOSIS_JOB=诊断任务数
TOTAL_JOB=总任务数
CPU_RESOURCE_USAGE_DISTRIBUTION=CPU资源消耗分布
MEMORY_RESOURCE_USAGE_DISTRIBUTION=内存资源消耗分布
JOB_AMOUNT_DISTRIBUTION=任务数量分布图

# FlinkTaskDiagnosisServiceImpl
CPU_OPTIMIZE=可优化CPU数
CPU_TOTAL_USAGE=总CPU消耗数
MEMORY_OPTIMIZE=可优化内存数
MEMORY_TOTAL_USAGE=总内存消耗数
JOB_AMOUNT_TREND=任务数趋势
JOB_AMOUNT_UNIT=个
JOB_AMOUNT_EXCEPTION=异常任务数

# JobServiceImpl
TRY_NUMBER=第 %d 次执行
APPLICATION_NOT_EXIST=applicationId不存在
APPLICATION_CATEGORY=该任务发生
APPLICATION_EXCEPTION=检测到%s, 具体情况请点击查看其诊断报告
ABNORMAL_LOG_ANALYSIS=异常日志分析
ABNORMAL_LOG_CONCLUSION=运行过程发生错误异常,请根据关键日志和相应的诊断建议进行问题修改
ABNORMAL_LOG_CONCLUSION_DESC=抓取scheduler中的错误日志
ABNORMAL_LOG_SUMMARY=第%d次执行错误日志汇总
JOB_DURATION_ANALYSIS=运行耗时异常分析
JOB_DURATION_TREND=运行耗时趋势图
JOB_EXECUTION_DATE=执行周期
JOB_DURATION=运行耗时
MAX_VALUE=最大值
BASELINE_TIME_ANALYSIS=基线时间异常分析
BASELINE_TIME_CONCLUSION=本任务结束时间为%s, 基线时间为%s, 运行发生晚点
BASELINE_TIME_CONCLUSION_DESC=根据该任务的上下游关系，分析本次任务晚点的原因
JOB_DURATION_INFO=本任务运行耗时为%s
BASELINE_DURATION_INFO=%s, 基线运行耗时为%s
DURATION_EXCEPTION=%s, 运行耗时异常
DURATION_NORMAL=%s, 未检测到异常
OTHER_ERROR=其他错误
YARN_ERROR=从Yarn日志中检测到'%s'异常, 详细日志和诊断建议请查看异常日志分析
SCHEDULER_ERROR=从调度日志中检测到%s, 详细日志和诊断建议请查看异常日志分析
OCCUR=%s发生%s

# OneClickDiagnosisServiceImpl
UNSUPPORTED_TYPE=暂不支持%s类型的任务
APP_DIAGNOSIS_DONE=该ApplicationId已经诊断完成
APP_DIAGNOSIS_PROCESSING=%s 诊断中, 文件总数:%d, 已解析文件数:%d
APP_DIAGNOSIS_SUCCEED=%s 诊断完成
APP_DIAGNOSIS_FAILED=%s 诊断失败, 请联系系统管理员
APP_DIAGNOSIS_SENDING=发送诊断中, 请稍后
