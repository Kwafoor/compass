# https://dolphinscheduler.apache.org/en-us/docs/3.1.8/guide/start/docker#using-exists-postgresql-zookeeper

services:
  postgres:
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    container_name: postgres
    hostname: postgres
    ports:
      - 5432:5432
    volumes:
      - ./script/hive-schema-2.3.0.postgres.sql:/docker-entrypoint-initdb.d/hive-schema-2.3.0.postgres.sql
      - ./script/hive-txn-schema-2.3.0.postgres.sql:/docker-entrypoint-initdb.d/hive-txn-schema-2.3.0.postgres.sql

  zookeeper:
    image: zookeeper:${ZOOKEEPER_VERSION}
    ports:
      - 2181
    container_name: zookeeper
    hostname: zookeeper

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper

  redis:
    image: redis:7.2.1
    container_name: redis
    hostname: redis
    ports:
      - 6379

  elasticsearch:
    image: elasticsearch:8.10.2
    environment:
      ES_JAVA_OPTS: "-Xms512M -Xmx512M"
      ES_PORT: 0.0.0.0:9200
      discovery.type: single-node
      xpack.security.enabled: false
    container_name: elasticsearch
    hostname: elasticsearch
    ports:
      - 9200:9200

#  minio:
#    image: bitnami/minio:2023-debian-11
#    environment:
#      MINIO_ROOT_USER: minio
#      MINIO_ROOT_PASSWORD: minio_minio
#      MINIO_DEFAULT_BUCKETS: spark-bucket,iceberg-bucket
#    container_name: minio
#    hostname: minio
#    ports:
#      - 9000
#      - 9001:9001
#
#  metastore:
#    build:
#      context: ./dockerfiles
#      dockerfile: compass-playground-hadoop.Dockerfile
#      args:
#        AWS_JAVA_SDK_VERSION: ${AWS_JAVA_SDK_VERSION}
#        HADOOP_VERSION: ${HADOOP_VERSION}
#        HIVE_VERSION: ${HIVE_VERSION}
#        APACHE_MIRROR: ${APACHE_MIRROR}
#        MAVEN_MIRROR: ${MAVEN_MIRROR}
#    container_name: metastore
#    hostname: metastore
#    ports:
#      - 9083
#    volumes:
#      - ./conf/core-site.xml:/etc/hadoop/conf/core-site.xml
#      - ./conf/hive-site.xml:/etc/hive/conf/hive-site.xml
#    depends_on:
#      - minio
#      - postgres

  dolphinscheduler-schema-initializer:
    image: apache/dolphinscheduler-tools:3.1.8
    profiles: ["schema"]
    environment:
      DATABASE: postgresql
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    command: [ tools/bin/upgrade-schema.sh ]
    depends_on:
      - postgres

  dolphinscheduler-api:
    image: apache/dolphinscheduler-api:3.1.8
    ports:
      - "12345:12345"
      - "25333:25333"
    profiles: ["dolphinscheduler"]
    environment:
      DATABASE: postgresql
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      REGISTRY_ZOOKEEPER_CONNECT_STRING: zookeeper:2181
    depends_on:
      - postgres
      - zookeeper

  dolphinscheduler-alert:
    image: apache/dolphinscheduler-alert-server:3.1.8
    profiles: ["dolphinscheduler"]
    environment:
      DATABASE: postgresql
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      REGISTRY_ZOOKEEPER_CONNECT_STRING: zookeeper:2181
    depends_on:
      - postgres
      - zookeeper

  dolphinscheduler-master:
    image: apache/dolphinscheduler-master:3.1.8
    profiles: ["dolphinscheduler"]
    environment:
      DATABASE: postgresql
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      REGISTRY_ZOOKEEPER_CONNECT_STRING: zookeeper:2181
    depends_on:
      - postgres
      - zookeeper

  dolphinscheduler-worker:
    build:
      context: ./dockerfiles
      dockerfile: compass-playground-dolphinscheduler-worker.Dockerfile
      args:
        AWS_JAVA_SDK_VERSION: ${AWS_JAVA_SDK_VERSION}
        SPARK_HADOOP_VERSION: ${SPARK_HADOOP_VERSION}
        POSTGRES_JDBC_VERSION: ${POSTGRES_JDBC_VERSION}
        SCALA_BINARY_VERSION: ${SCALA_BINARY_VERSION}
        SPARK_VERSION: ${SPARK_VERSION}
        SPARK_BINARY_VERSION: ${SPARK_BINARY_VERSION}
        APACHE_MIRROR: ${APACHE_MIRROR}
        MAVEN_MIRROR: ${MAVEN_MIRROR}
    profiles: ["dolphinscheduler"]
    environment:
      DATABASE: postgresql
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      REGISTRY_ZOOKEEPER_CONNECT_STRING: zookeeper:2181
    volumes:
      - ./conf/core-site.xml:/etc/hadoop/conf/core-site.xml
      - ./conf/hive-site.xml:/etc/hive/conf/hive-site.xml
      - ./conf/spark-defaults.conf:/etc/spark/conf/spark-defaults.conf
    depends_on:
      - postgres
      - zookeeper

  compass:
    build:
      context: ./
      dockerfile: dockerfiles/compass.Dockerfile
    profiles: ["compass"]
    tty: true
    depends_on:
      - postgres
      - zookeeper
      - kafka
      - redis
      - elasticsearch
